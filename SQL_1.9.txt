 CREATE TABLE Customers (
 CustomerID INT PRIMARY KEY,
 FirstName VARCHAR(50),
 LastName VARCHAR(50),
 Email VARCHAR(100)
);

CREATE TABLE Orders (
 OrderID INT PRIMARY KEY,
 CustomerID INT,
 OrderDate DATE,
 TotalAmount DECIMAL(10, 2),
 FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);

INSERT INTO Customers (CustomerID, FirstName, LastName, Email)
VALUES
 (1, 'John', 'Doe', 'john.doe@example.com'),
 (2, 'Jane', 'Smith', 'jane.smith@example.com')

INSERT INTO Orders (OrderID, CustomerID, OrderDate, TotalAmount)
VALUES
 (1, 1, '2023-08-01', 50.00),
 (2, 2, '2023-08-15', 75.00)

SELECT * FROM Customers;
Select * from Orders;

SELECT Customers.*, Orders.*
FROM Customers
INNER JOIN Orders ON Customers.CustomerID = Orders.CustomerID;

SELECT Customers.*, Orders.*
FROM Customers
LEFT JOIN Orders ON Customers.CustomerID = Orders.CustomerID;

SELECT CustomerID FROM Customers
UNION
SELECT CustomerID FROM Orders;

SELECT CustomerID FROM Customers
UNION ALL
SELECT CustomerID FROM Orders;

SELECT CustomerID FROM Customers
INTERSECT
SELECT CustomerID FROM Orders;

SELECT * FROM Orders WHERE CustomerID IN 
(SELECT CustomerID FROM Customers WHERE Email = 'john.doe@example.com');

SELECT * FROM Customers WHERE CustomerID IN (SELECT CustomerID FROM 
Orders);



CREATE TABLE GALLERIES(
GID INT PRIMARY KEY,
CITY VARCHAR(100)
);

CREATE TABLE PAINTINGS(
PID INT PRIMARY KEY,
NAME VARCHAR(100),
GID INT,
PRICE INT,
FOREIGN KEY (GID) REFERENCES GALLERIES (GID)
);

INSERT INTO GALLERIES (GID, CITY)
VALUES
(1,'JAIPUR'),
(2,'KOLKATA'),
(3,'MADHUBANI')

INSERT INTO PAINTINGS (PID,NAME,GID,PRICE)
VALUES
(1,'PATTERNS',3,5000),
(2,'RINGER',1,4500),
(3,'GIFT',1,3200),
(4,'VIOLIN LESSONS',2,6700),
(5,'CURIOSITY',2,9800)

SELECT * FROM GALLERIES;
SELECT * FROM PAINTINGS;

CREATE TABLE SALES_AGENTS(
SAID INT PRIMARY KEY,
LAST_NAME VARCHAR(50),
FIRST_NAME VARCHAR(50),
GID INT,
AGENCY_FEE INT,
FOREIGN KEY (GID) REFERENCES GALLERIES (GID)
);

CREATE TABLE MANAGERS(
MID INT PRIMARY KEY,
GID INT,
FOREIGN KEY (GID) REFERENCES GALLERIES (GID)
);

INSERT INTO SALES_AGENTS(SAID,LAST_NAME,FIRST_NAME,GID,AGENCY_FEE)
VALUES
(1,'BROWN','DENIS',2,2250),
(2,'WHITE','KATE',3,3120),
(3,'BLACK','SARAH',2,1640),
(4,'SMITH','HELEN',1,4500),
(5,'STEWART','TOM',3,2130)

INSERT INTO MANAGERS(MID,GID)
VALUES
(1,2),
(2,3),
(4,1)

SELECT * FROM SALES_AGENTS;
SELECT * FROM MANAGERS;

SELECT NAME, PRICE, (SELECT AVG(PRICE) FROM PAINTINGS) AVG_PRICE FROM PAINTINGS;

SELECT * FROM PAINTINGS WHERE PRICE > (SELECT AVG(PRICE) FROM PAINTINGS);

SELECT * FROM SALES_AGENTS WHERE SAID NOT IN (SELECT MID FROM MANAGERS);

SELECT AVG(AGENCY_FEE) FROM SALES_AGENTS WHERE SAID NOT IN (SELECT MID FROM MANAGERS);

SELECT PID, NAME, PRICE FROM PAINTINGS
WHERE CONCAT (NAME, PRICE)
IN (SELECT CONCAT(NAME, MIN(PRICE))
FROM PAINTINGS GROUP BY NAME);

---SUBQUERIES THAT RETURN MULTIPLE COLUMNS AS OUTPUT DEPENDING ON THE 
---INFORMATION OBTAINED FROM THE PARENT QUERY ARE CALLED CORRELATED SUBQUERY

SELECT CITY, (SELECT COUNT(*) FROM PAINTINGS P WHERE G.GID=P.GID) COUTN_PAINTING FROM GALLERIES G;

SELECT LAST_NAME, FIRST_NAME, AGENCY_FEE FROM SALES_AGENTS SAL WHERE SAL.AGENCY_FEE >= (SELECT AVG(AGENCY_FEE) FROM SALES_AGENTS SAL2 WHERE SAL2.GID=SAL.GID);

---SUBQUERY INSIDE A SUBQUERY- NESTED SUBQUERY

SELECT NAME AS PAINTING, PRICE,
(SELECT AVG(PRICE) FROM PAINTINGS WHERE PRICE IN 
(SELECT PRICE FROM PAINTINGS WHERE PRICE >= 5000))
AS AVG_PRICE FROM PAINTINGS;

---VIEW- VIRTUAL TABLE

CREATE VIEW VW_PAINTINGPRICE AS
SELECT NAME AS PAINTING, PRICE,
(SELECT AVG(PRICE) FROM PAINTINGS WHERE PRICE IN 
(SELECT PRICE FROM PAINTINGS WHERE PRICE >= 5000))
AS AVG_PRICE FROM PAINTINGS;

SELECT * FROM VW_PAINTINGPRICE;
